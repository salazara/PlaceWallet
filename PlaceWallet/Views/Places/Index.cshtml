@model IEnumerable<PlaceWallet.Models.Place>

@{
    ViewData["Title"] = "Index";
}

<!-- $('form') -->
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
}

<div id="floating-panel">
    <input id="address" type="textbox" value="Sydney, NSW">
    <input id="submit" type="button" value="Geocode">
</div>

<div id="map" style="height: 80vh; margin: 20px; background-color: black">
</div>

@section Scripts{

<script type="text/javascript">
    var map;
    var markers;

    function initMap() {

        map = new google.maps.Map(document.getElementById('map'), {
            zoom: 3,
            center: { lat: -34.397, lng: 150.644 }
        });

        var geocoder = new google.maps.Geocoder();
        markers = [];

        @foreach (var item in Model)
        {
            @: addMarker("@item.Address", @item.Lat, @item.Lng);
        }

        document.getElementById('submit').addEventListener('click', function () {
            geocodeAddress(geocoder, map);
        });
    }

    function geocodeAddress(geocoder, resultsMap) {
        var address = document.getElementById('address').value;
        geocoder.geocode({ 'address': address }, function (results, status) {
            if (status === 'OK') {
                resultsMap.setCenter(results[0].geometry.location);
                addMarker(results[0].formatted_address, results[0].geometry.location.lat(), results[0].geometry.location.lng());
            } else {
                alert('Geocode was not successful for the following reason: ' + status);
            }
        });
    }

    // Adds a marker to the map and push to the array.
    function addMarker(address, lat, lng) {

        var markerExists = false;

        for (let i = 0; i < markers.length; i++) {
            if (lat == markers[i].position.lat() && lng == markers[i].position.lng()) {
                markerExists = true;
                break;
            }
        }

        if (markerExists) {
            alert('Error: ' + address  + ' is already marked on the map.');
        } else {

            var marker = new google.maps.Marker({
                position: { lat: lat, lng: lng },
                map: map
            });

            var infoWindowContent =
                '<p><b>Foo Foo</b></p>' +
                '<p>' + address + ' (' + lat + ', ' + lng + ')</p>' +
                '<button onclick="addToWallet(\'' + address + '\',' + lat + ','+ lng + ')">Add to Wallet</button>';
            console.log(infoWindowContent);
            var infoWindow = new google.maps.InfoWindow({
                content: infoWindowContent
            });

            // todo: dont add if place exists in database

            marker.addListener('click', function () {

                infoWindow.open(map, marker);
            });

            markers.push(marker);
        }
    }

    function addToWallet(address, lat, lng) {

            var placeExists = false;

            @foreach (var item in Model)
            {
                @: if (lat == @item.Lat && lng == @item.Lng){ placeExists = true; }
            }

            if (placeExists) {

                alert('Error: ' + address + ' is already in your wallet.');

            } else {

                // create place database entry via ajax post

                var form = $('form');
                var token = $('input[name="__RequestVerificationToken"]', form).val();

                $.ajax({
                    url: '/Places/Create',
                    type: 'POST',
                    data: {
                        __RequestVerificationToken: token,
                        Name: "foo foo",
                        Address: address,
                        Lat: lat,
                        Lng: lng,
                    },
                    success: function () {
                        alert("success");
                        window.location.reload();
                    },
                    error: function () {
                        alert("error");
                    }
                });
            }
    }
</script>
    <script async defer
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDAUeZyffLVAqGdbfXgq-7F80_DbOfG7SQ&callback=initMap">
    </script>
}

<h2>Your Wallet</h2>

<!--
<p>
    <a asp-action="Create">Create New</a>
</p>
-->
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Address)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Lat)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Lng)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Address)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Lat)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Lng)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.ID">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.ID">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.ID">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
